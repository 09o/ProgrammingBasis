#####################################################################################
#			一、列表：可重复，类型可不同。				    #
#####################################################################################

# define a list
>> lista = ['a', 'b', 'c' , 1, 2]
>> lista[1] 
'b'

#===================================================================================#
# 添加元素
# 1.append  -  向list的末尾追加单个元素。（把列表当做堆栈使用一后进（后出））
>> lista.append(3)
>> lista
['a', 'b', 'c', 1, 2, 3]

#===================================================================================#
# 2.insert  -  将单个元素插入到list中。数值参数是插入点的索引
>> lista.insert(3, 'd')
>> lista
['a', 'b', 'c', 'd', 1, 2, 3]

#===================================================================================#
# 3.extend  -  连接list
>> lista.extend([4, 5])
>> lista
['a', 'b', 'c', 'd', 1, 2, 3, 4, 5]

#===================================================================================#
# 获取列表的长度
>> print(len(lista))
9

#===================================================================================#
# 在list中搜索
>> lista.index(3)
6
>> lista.index('100')
ValueError: 100 is not in list
>> print(5 in lista)
True

#===================================================================================#
# 删除元素
>> lista.remove(3)
>> lista
['a', 'b', 'c', 'd', 1, 2, 4, 5]
>> print(lista.pop())
5
>> lista
['a', 'b', 'c', 'd', 1, 2, 4]

#===================================================================================#
# 遍历list
>> for item in lista:
       print(item)
a
b
c
d
1
2
4



#####################################################################################
#			二、元组：只读的，不能修改。				    #
#####################################################################################

# define a tuple
>> tupleA = (1, 2, 'a', 4, '5', 6)
>> tupleA
(1, 2, 'a', 4, '5', 6)

#===================================================================================#
# 定义了一个元组之后就无法再添加或修改元组中的元素
>> print(tupleA[2]) # 元组的元素都有确定的顺序
'a'
>> print(tupleA[-1]) # 负的索引从元组的尾部开始计数
6
>> print(tupleA[1:3]) # 元组也可以进行切片操作，切片后返回新的元组，但原元组不变
(2, 'a')

#===================================================================================#
# 使用in运算检查某个元素是否存在于元组中
>> print(1 in tupleA)
True

#===================================================================================#
# 使用for in 进行元组遍历
>> for item in tupleA:
       print(item)
1
2
a
4
5
6

#===================================================================================#
# 获取item的序号，使用一个遍历
>> for index in range(len(tupleA)):
       print(index)
0
1
2
3
4
5

#===================================================================================#
# 使用内置的enumerate()函数
>> for index, item in enumerate(tupleA):
       pirnt("%i, %s" % (index, item))
0, 1
1, 2
2, a
3, 4
4, 5
5, 6



#####################################################################################
#				三、字典					    #
#####################################################################################

# define a dictionary
>> dict1 = {'name': 'Bob', 'age': 20, 'sex': 'Male'}
>> dict1
{'name': 'Bob', 'age': 20, 'sex': 'Male'}

>> dict1['name'] = 'Jack'
>> dict1
{'name': 'Jack', 'age': 18, 'sex': 'Male'}
>> dict1['Age'] = 18	# Python中区分大小写
{'name': 'Jack', 'age': 18, 'sex': 'Male', 'Age': 18}

#===================================================================================#
# 删除元素
>> del dict1['Age']
>> dict1
{'name': 'Jack', 'age': 18, 'sex': 'Male'}
>> dict1.clear()	# clear从一个dictionary中清除所有的元素
>> dict1
{}



#####################################################################################
#				四、集合：无序不重复元素集			    #
#####################################################################################

# sets 不支持索引、分片、或其他类序列的操作
# 要创建一个空集合，必须使用set() 而不是{}, 后者是用于创建空字典
# 通过set函数将列表和元组转换成集合
>> lst = [1, 1, 0]
>> lst_set = set(lst)
>> lst_set
{1, 0}

>> tup = (2, 2, 1)
>> tup_set = set(tup)
>> tup_set
{2, 1}

>> for item in lst_set:
       print(item)
0
1

#===================================================================================#
# 使用set函数创建集合
>> lst1 = [1, 2, 2, 3, 4 , 5, 5]
>> lst1_set = set(lst1)
>> lst1_set
{1, 2, 3, 4, 5}

>> lst1_set.add(6)
>> lst1_set
{1, 2, 3, 4, 5, 6}

#===================================================================================#
# frozenset()返回一个冻结的集合，冻结后集合不能再添加或修改任何元素
>> lst1_set2 = frozenset(lst1)	# 生成一个新的不可变集合
>> lst1_set2
frozenset({1, 2, 3, 4, 5})
>> lst1_set2.add(6)
AttributeError: 'frozenset' object has no attribute 'add'

#===================================================================================#
# 集合有并集、交集、求差操作
# a & b 并集:intersection()方法返回一个新集合，包含两个集合中同时出现的所有元素
# a | b 交集:union()方法返回一个新集合，包含在两个集合中出现的元素
# a - b 差集:difference()方法返回的新集合中，包含所有在集合a出现但未在集合b中的元素
# a ^ b 对称差集:symmetric_difference()方法返回一个新集合，包含所有只在其中一个集合中出现的元素

>>> lst1=(1, 2, 3, 4, 5)
>>> a = set(lst1)
>>> a
{1, 2, 3, 4, 5}
>>> lst2=(3, 4, 5, 6, 7)
>>> b = set(lst2)
>>> b
{3, 4, 5, 6, 7}
>>> a & b
{3, 4, 5}
>>> a | b
{1, 2, 3, 4, 5, 6, 7}
>>> a - b
{1, 2}
>>> a ^ b
{1, 2, 6, 7}

#===================================================================================#
# 删除元素
>>> lst1_set.discard(6)
>>> lst1_set
{1, 2, 3, 4, 5}
>>> lst1_set.discard(6)	# 当元素不存在，不会发生异常
>>> lst1_set.remove(6)
Traceback (most recent call last):
  File "<pyshell#210>", line 1, in <module>
    lst1_set.remove(6)
KeyError: 6
>>> lst1_set.pop()	# set是无序的，所有pop会随机从set中删除一个元素
1